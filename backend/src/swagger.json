{
  "swagger": "2.0",
  "info": {
    "title": "Collaborator",
    "description": "Swagger Collaborator API",
    "version": "1.0.0"
  },
  "host": "localhost:3001",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/user/": {
      "get": {
        "description": "Get a specific the user information by token",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data. You will receive an user object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Cannot find the user. You will receive an err message",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      },
      "post": {
        "description": "Create a new user",
        "parameters": [
          {
            "name": "User Data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created. You will receive the new user object.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Registration failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      },
      "put": {
        "description": "Modify a user's info, you can only modify certain fields",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "User Info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. You will receive the new user object.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Update failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      },
      "delete": {
        "description": "Delete user information, you will receive 204 when deleted",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Deletion successful. There will be no return value"
          },
          "400": {
            "description": "Deletion failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/password": {
      "put": {
        "description": "Modify a user's password",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Password",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "new password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. You will receive the new password object.",
            "schema": {
              "$ref": "#/definitions/Password"
            }
          },
          "400": {
            "description": "Update failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "Login using userEmail and password",
        "parameters": [
          {
            "name": "Login Info",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userEmail": {
                  "type": "string",
                  "example": "Example@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "xxxxxx"
                }
              },
              "required": [
                "userEmail",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in. You will receive a token.",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "something secret"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Login failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "description": "Get all the user information, only admin can access",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all users. You will receive an array of user objects"
          },
          "400": {
            "description": "Falied to retrieve all users. You will receive an err message",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          },
          "403": {
            "description": "You are not an admin user. You will receive an err message",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/post/all": {
      "get": {
        "description": "Get all the posts from all the users.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/post/": {
      "get": {
        "description": "Get all the posts for you.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "Create a post!",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Post Data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postCaption": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Post successfully created. You will receive the new post object.",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Failed to create a post, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/post/{postId}": {
      "put": {
        "description": "Modify a post's info, you can only modify certain fields",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Post data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postCaption": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. You will receive the new post object.",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Update failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      },
      "delete": {
        "description": "Delete post information, you will receive 204 when deleted",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Deletion successful. There will be no return value"
          },
          "400": {
            "description": "Deletion failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/connection/suggested": {
      "get": {
        "description": "Get all the users except for the ones you have connections with.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all suggested users. You will receive an array of user objects",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          },
          "400": {
            "description": "Falied to retrieve all suggested users. You will receive an err message",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/connection/": {
      "post": {
        "description": "Create a new connection request",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Connection Request Data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "receiverId": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Connection request successfully created. You will receive the new connection object.",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          },
          "400": {
            "description": "Failed to send a connection request, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      },
      "get": {
        "description": "Get all the connections including the ones you have not accepted.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all connections. You will receive an array of connection objects",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          },
          "400": {
            "description": "Falied to retrieve all connections. You will receive an err message",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/connection/{receiverId}": {
      "put": {
        "description": "Accept a connection request, you will receive 200 when Accepted.",
        "parameters": [
          {
            "name": "receiverId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Accept successfully. There will be no return value"
          },
          "400": {
            "description": "Accept failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      },
      "delete": {
        "description": "Cancel a connection request, you will receive 200 when canceled.",
        "parameters": [
          {
            "name": "receiverId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cancelation successful. There will be no return value"
          },
          "400": {
            "description": "Cancelation failed, it might be caused by anything. You will receive an err message.",
            "schema": {
              "$ref": "#/definitions/Err"
            }
          }
        }
      }
    },
    "/user/comment/{postId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/comment/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "example": "any"
                },
                "commentContent": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "authorId": {
          "type": "string",
          "example": "cfe1ce31-7beb-4cf0-8340-b015a4697743"
        },
        "postDate": {
          "type": "string",
          "example": "2005-08-26"
        },
        "postCaption": {
          "type": "string",
          "example": "Dolores quia voluptates quia aliquam nihil at tenetur."
        },
        "postLikeCounts": {
          "type": "number",
          "example": 5
        },
        "postComments": {
          "type": "array",
          "example": [
            "Est aut omnis eveniet."
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "authorId",
        "postDate",
        "postCaption",
        "postLikeCounts",
        "postComments"
      ]
    },
    "Project": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "example": "Aut similique omnis fugiat optio fugit."
        },
        "projectLink": {
          "type": "string",
          "example": "Rogelio_Goyette@yahoo.com"
        },
        "projectAutherId": {
          "type": "string",
          "example": "8f139898-7fbb-4ce8-834b-0f1e75f7d150"
        },
        "projectLikesCount": {
          "type": "number",
          "example": 55
        },
        "projectStartDate": {
          "type": "string",
          "example": "2015-10-12"
        },
        "projectDescription": {
          "type": "string",
          "example": "Quos fuga dolore facere. Rerum voluptatem nostrum dolores laudantium voluptas itaque."
        },
        "isProjectFinished": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "projectName",
        "projectLink",
        "projectAutherId",
        "projectLikesCount",
        "projectStartDate",
        "projectDescription",
        "isProjectFinished"
      ]
    },
    "Skill": {
      "type": "object",
      "properties": {
        "skillName": {
          "type": "string",
          "example": "pt"
        },
        "skillLevel": {
          "type": "number",
          "example": 1
        },
        "skillDescription": {
          "type": "string",
          "example": "Animi voluptatum nihil ut impedit porro quas qui."
        }
      },
      "required": [
        "skillName",
        "skillLevel",
        "skillDescription"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "string",
          "example": "Jacobs_Kaleb@yahoo.com"
        },
        "userFirstName": {
          "type": "string",
          "example": "Markus"
        },
        "userLastName": {
          "type": "string",
          "example": "Kuhic"
        },
        "userBirthday": {
          "type": "string",
          "example": "1990-02-19"
        },
        "userPhone": {
          "type": "string",
          "example": "920-273-9672"
        },
        "userStory": {
          "type": "string",
          "example": "Pariatur libero sapiente et quia explicabo porro tempore id ut. Sunt veritatis qui nemo quia repellendus voluptas tempora et quia. Et dicta accusantium perferendis voluptatem a quod facere corrupti."
        },
        "userAvatarImg": {
          "type": "string",
          "example": "Eum debitis molestiae molestias eum deserunt."
        },
        "password": {
          "type": "string",
          "example": "0Lavonne69"
        },
        "userProjectCount": {
          "type": "number",
          "example": 2
        },
        "acorns": {
          "type": "number",
          "example": 4
        },
        "userLevel": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "userEmail",
        "userFirstName",
        "password",
        "userProjectCount",
        "acorns",
        "userLevel"
      ]
    },
    "Connection": {
      "type": "object",
      "properties": {
        "senderId": {
          "type": "string",
          "example": "e12f8115-a74d-424c-8c3e-07c81d012a30"
        },
        "receiverId": {
          "type": "string",
          "example": "e084a12f-3aa2-42e5-ab85-efe1f37a5241"
        },
        "accepted": {
          "type": "boolean",
          "example": true
        },
        "userIds": {
          "type": "array",
          "example": [
            "d478c440-7185-4b77-a407-ae547b67fc6e",
            "e583d02c-d8e6-4a86-a335-a45e46765d94"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Password": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "a4de3ca4-78f8-4479-ba9d-4e02695757b5"
        },
        "hash": {
          "type": "string",
          "example": "6Arvid20"
        }
      },
      "required": [
        "userId",
        "hash"
      ]
    },
    "Err": {
      "type": "object",
      "properties": {
        "err": {
          "type": "string",
          "example": "Something is wrong...."
        }
      }
    }
  }
}